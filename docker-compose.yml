# Docker Compose configuration for FastAPI Contacts Application
#
# This configuration sets up a complete development environment with three services:
# 1. FastAPI Application (app)
#    - Runs the main application
#    - Uses Poetry for dependency management
#    - Hot-reload enabled for development
#    - Connected to PostgreSQL and Redis
#
# 2. PostgreSQL Database (db)
#    - Stores application data
#    - Persistent volume for data storage
#    - Health checks enabled
#
# 3. Redis Cache (redis)
#    - Used for rate limiting and caching
#    - Health checks enabled
#
# All services are connected through a bridge network for secure communication.
# Environment variables are loaded from .env file for configuration.

version: '3.8'

services:
  app:
    build: .
    container_name: fastapi-app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/contacts_db
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_DB: contacts_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d contacts_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
